import ast
import csv
import sqlite3

from utils.database_utils.database_extractor import extract_features

# SQLite database file path
db_path = '../../malware_db.sqlite'


def get_features_by_family(family_name):
    try:
        # Connect to your SQLite database
        conn = sqlite3.connect(db_path)

        # Create a cursor object
        cur = conn.cursor()

        # Execute the query to fetch SHA and LLM text
        cur.execute("SELECT sha, llm_text FROM files WHERE family_name = ?", (family_name,))

        # Fetch all rows from the database
        records = cur.fetchall()

        # Close the cursor and connection
        cur.close()
        conn.close()

        feature_dicts = {}
        for sha, llm_text in records:
            if llm_text:
                dictio = extract_features(llm_text)
                feature_dicts[sha] = dictio

        return feature_dicts

    except Exception as e:
        print("Error in database operation:", e)
        return []

def get_features_by_sha(sha):
    try:
        # Connect to your SQLite database
        conn = sqlite3.connect(db_path)

        # Create a cursor object
        cur = conn.cursor()

        # Execute the query to fetch LLM text for a specific SHA
        cur.execute("SELECT llm_text FROM files WHERE sha = ?", (sha,))

        # Fetch the first row from the database
        record = cur.fetchone()

        # Close the cursor and connection
        cur.close()
        conn.close()

        if record:
            llm_text = record[0]
            if llm_text:
                features = extract_features(llm_text)
                return features
        return None
    except Exception as e:
        print("Error in database operation:", e)
        return None

def write_to_csv():
    # Connect to the SQLite database
    conn = sqlite3.connect(db_path)
    cur = conn.cursor()

    # Open CSV file for writing
    with open('/malware.csv', mode='w', newline='', encoding='utf-8') as f:
        writer = csv.writer(f)
        # Write CSV header
        writer.writerow(['sha', 'llm_text', 'family_name'])
        # Execute the query
        cur.execute("SELECT sha, llm_text, family_name FROM files;")
        # Write each row to the CSV file
        for row in cur:
            writer.writerow(row)  # Write the row as received from the database

    # Cleanup
    cur.close()
    conn.close()

if __name__ == '__main__':
    write_to_csv()
    # The function call to `get_features_by_family_from_csv` is commented out because it's not provided in the snippet.
